{"version":3,"sources":["components/PersonInputForm.js","components/Filtering.js","components/Number.js","components/Numbers.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonInputForm","props","react_default","a","createElement","onSubmit","submitCommand","value","nameValue","onChange","nameChange","placeholder","numberValue","numberChange","type","Filtering","_ref","filterChange","Number","person","handler","name","number","onClick","Numbers","nimet","handleDelete","map","persoona","components_Number","key","indexOf","id","Notification","message","messageType","className","baseUrl","services_persons","axios","get","then","response","data","newNumber","post","delete","concat","newPerson","put","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filterValue","setFilterState","_useState9","text","_useState10","notificationMessage","setNotificationMessage","useEffect","personService","initialNumbers","namesToShow","length","filter","toLowerCase","includes","components_Notification","components_Filtering","event","target","components_PersonInputForm","preventDefault","uusiNimi","trim","find","window","confirm","korvattavaPersoona","objectSpread","returnedPerson","setTimeout","catch","error","newPersonEntry","alert","components_Numbers","toBeRemoved","removeNumber","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yOAceA,EAZS,SAACC,GAAD,OACpBC,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,EAAMK,eAClBJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,oBAAeF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOG,MAAON,EAAMO,UAAWC,SAAUR,EAAMS,WAAYC,YAAY,WAC9FT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOG,MAAON,EAAMW,YAAaH,SAAUR,EAAMY,aAAcF,YAAY,eAG5GT,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQU,KAAK,UAAb,kBCAEC,EARG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAH,OACdf,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,0CAA4BF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,SAAUQ,EAAcN,YAAY,4BCI5EO,EAPA,SAAAF,GAAA,IAAGG,EAAHH,EAAGG,OAAQC,EAAXJ,EAAWI,QAAX,OACXlB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKe,EAAOE,MAAUnB,EAAAC,EAAAC,cAAA,UAAKe,EAAOG,QAClCpB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQmB,QAASH,GAAjB,aCiBGI,EAnBC,SAAAR,GAA6B,IAA1BS,EAA0BT,EAA1BS,MAAOC,EAAmBV,EAAnBU,aAUtB,OACIxB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aAViBqB,EAAME,IAAI,SAAAC,GAAQ,OACvC1B,EAAAC,EAAAC,cAACyB,EAAD,CACIV,OAAQS,EACRE,IAAKL,EAAMM,QAAQH,GACnBR,QAAS,kBAAMM,EAAaE,EAASI,YCKlCC,EAZM,SAAAjB,GAA8B,IAA3BkB,EAA2BlB,EAA3BkB,QAASC,EAAkBnB,EAAlBmB,YAC7B,OAAgB,OAAZD,EACO,KAIPhC,EAAAC,EAAAC,cAAA,OAAKgC,UAAWD,GACXD,oBCRPG,EAAU,eAsBDC,EApBA,WAEX,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAkB9BL,EAfA,SAACM,GAEZ,OADgBL,IAAMM,KAAKR,EAASO,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa9BL,EALA,SAACN,GAEZ,OADgBO,IAAMO,OAAN,GAAAC,OAAgBV,EAAhB,KAAAU,OAA2Bf,IAC5BS,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAG9BL,EAVC,SAACN,EAAIgB,GAEjB,OADgBT,IAAMU,IAAN,GAAAF,OAAaV,EAAb,KAAAU,OAAwBf,GAAMgB,GAC/BP,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCiJ9BO,SAxJH,WAAM,IAAAC,EACcC,mBAAS,IADvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACAI,EADAJ,EAAA,GAAAK,EAEcN,mBAAS,IAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGkBV,mBAAS,IAH3BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTlB,EAHSmB,EAAA,GAGEC,EAHFD,EAAA,GAAAE,EAIsBb,mBAAS,IAJ/Bc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAITE,EAJSD,EAAA,GAIIE,EAJJF,EAAA,GAAAG,EAKsCjB,mBAAS,CAAEkB,KAAM,KAAMxD,KAAM,SALnEyD,EAAAjB,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GAKTG,EALSD,EAAA,GAKYE,EALZF,EAAA,GAQhBG,oBAAU,WACRC,IAEGlC,KAAK,SAAAmC,GACJnB,EAAWmB,MAEd,IAEH,IAAMC,EAAqC,IAAvBV,EAAYW,OAAetB,EAAQuB,OAAO,SAAAnD,GAAQ,OACpEA,EAASP,KAAK2D,cAAcC,SAASd,EAAYa,eAAiBpD,EAASN,OAAO2D,SAASd,KACzFX,EAqHJ,OACEtD,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,QACblC,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC8E,EAAD,CAAchD,QAASsC,EAAoBF,KAAMnC,YAAaqC,EAAoB1D,OAClFZ,EAAAC,EAAAC,cAAC+E,EAAD,CAAWlE,aANW,SAACmE,GAAD,OAAWhB,EAAegB,EAAMC,OAAO9E,UAO7DL,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACkF,EAAD,CACEhF,cA1HY,SAAC8E,GACjBA,EAAMG,iBACN,IAAMC,EAAW5B,EAAQ6B,OACzB,GAAwB,IAApBD,EAASV,QAA4C,IAA5BlC,EAAU6C,OAAOX,OAK9C,GAAwB,IAApBU,EAASV,OAKb,GAAgC,IAA5BlC,EAAU6C,OAAOX,OAKrB,GAAIlC,GAAaY,EAAQkC,KAAK,SAAA9D,GAAQ,OAAIA,EAASP,KAAK2D,gBAAkBQ,EAASR,iBACjF,GAAIW,OAAOC,QAAP,GAAA7C,OAAkByC,EAAlB,0DAAoF,CACtF,IAAM5D,EAAW4B,EAAQkC,KAAK,SAAA9D,GAAQ,OAAIA,EAASP,KAAK2D,gBAAkBQ,EAASR,gBAC7Ea,EAAkBvC,OAAAwC,EAAA,EAAAxC,CAAA,GAAQ1B,EAAR,CAAkBN,OAAQsB,IA0BlD,YAzBA+B,EACiBkB,EAAmB7D,GAAI6D,GACrCpD,KAAK,SAAAsD,GACJtC,EAAWD,EAAQ7B,IAAI,SAAAR,GAAM,OAAIA,EAAOa,KAAO6D,EAAmB7D,GAAKb,EAAS4E,KAChFlC,EAAW,IACXG,EAAa,MAEdvB,KAAK,WACJgC,EAAuB,CACrBH,KAAI,sBAAAvB,OAAe8C,EAAmBxE,KAAlC,+BAAA0B,OAAiE8C,EAAmBvE,OAApF,KACJR,KAAM,WAGT2B,KAAKuD,WAAW,WACfvB,EAAuBnB,OAAAwC,EAAA,EAAAxC,CAAA,GAAKkB,EAAN,CAA2BF,KAAM,SACtD,MACF2B,MAAM,SAAAC,GACLzB,EAAuB,CACrBH,KAAI,sBAAAvB,OAAe8C,EAAmBxE,KAAlC,wCAAA0B,OAA6EmD,EAA7E,KACJpF,KAAM,UAERkF,WAAW,WACTvB,EAAuBnB,OAAAwC,EAAA,EAAAxC,CAAA,GAAKkB,EAAN,CAA2BF,KAAM,SACtD,YA3BX,CAkCA,IAAM6B,EAAiB,CACrB9E,KAAMmE,EACNlE,OAAQsB,GAGV+B,EACgBwB,GACb1D,KAAK,SAAAsD,GACJtC,EAAWD,EAAQT,OAAOgD,IAC1BlC,EAAW,IACXG,EAAa,MAEdvB,KAAK,WACJgC,EAAuB,CACrBH,KAAI,gBAAAvB,OAAeoD,EAAe9E,KAA9B,eAAA0B,OAAgDoD,EAAe7E,OAA/D,KACJR,KAAM,WAGT2B,KAAKuD,WAAW,WACfvB,EAAuBnB,OAAAwC,EAAA,EAAAxC,CAAA,GAAKkB,EAAN,CAA2BF,KAAM,SACtD,MACF2B,MAAM,SAAAC,GACLzB,EAAuB,CACrBH,KAAI,sBAAAvB,OAAeoD,EAAe9E,KAA9B,wCAAA0B,OAAgEmD,EAAhE,KACJpF,KAAM,UAERkF,WAAW,WACTvB,EAAuBnB,OAAAwC,EAAA,EAAAxC,CAAA,GAAKkB,EAAN,CAA2BF,KAAM,SACtD,YAlELqB,OAAOS,MAAM,qCALbT,OAAOS,MAAM,4BALbT,OAAOS,MAAM,sDAuHX1F,WAZmB,SAAC0E,GAAD,OAAWvB,EAAWuB,EAAMC,OAAO9E,QAYxBC,UAAWoD,EACzC/C,aAZqB,SAACuE,GAAD,OAAWpB,EAAaoB,EAAMC,OAAO9E,QAYxBK,YAAagC,IAEjD1C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACiG,EAAD,CAAS5E,MAAOoD,EAAanD,aAjBJ,SAACM,GAAD,OA1BR,SAACA,GACpB,IAAMsE,EAAc9C,EAAQkC,KAAK,SAAA9D,GAAQ,OAAIA,EAASI,KAAOA,IAAIX,KAC7DsE,OAAOC,QAAP,gBAAA7C,OAA+BuD,EAA/B,0BACF3B,EAA2B3C,GACxBS,KAAKgB,EAAWD,EAAQuB,OAAO,SAAA5D,GAAM,OAAIA,EAAOa,KAAOA,MACvDS,KAAK,WACJgC,EAAuB,CACrBH,KAAI,eAAAvB,OAAiBuD,EAAjB,KACJxF,KAAM,WAGT2B,KAAKuD,WAAW,WACfvB,EAAuBnB,OAAAwC,EAAA,EAAAxC,CAAA,GAAKkB,EAAN,CAA2BF,KAAM,SACtD,MACF2B,MAAM,SAAAC,GACLzB,EAAuB,CACrBH,KAAI,qBAAAvB,OAAcuD,EAAd,sBACJxF,KAAM,UAERkF,WAAW,WACTvB,EAAuBnB,OAAAwC,EAAA,EAAAxC,CAAA,GAAKkB,EAAN,CAA2BF,KAAM,SACtD,OAK0BiC,CAAavE,SCrIpDwE,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.41449a2b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonInputForm = (props) => (\r\n    <form onSubmit={props.submitCommand}>\r\n        <table>\r\n            <tbody> \r\n                <tr><td>Nimi: </td><td><input value={props.nameValue} onChange={props.nameChange} placeholder='Nimi' /></td></tr>\r\n                <tr><td>Numero: </td><td><input value={props.numberValue} onChange={props.numberChange} placeholder='Numero' /></td></tr>\r\n            </tbody>\r\n        </table>\r\n        <div><button type=\"submit\">Lisää</button></div>\r\n    </form>\r\n)\r\n\r\nexport default PersonInputForm","import React from 'react'\r\n\r\nconst Filtering = ({ filterChange }) => (\r\n    <table>\r\n        <tbody>\r\n            <tr><td>Rajaa näytettäviä: </td><td><input onChange={filterChange} placeholder='Nimi tai numero...' /></td></tr>\r\n        </tbody>\r\n    </table>\r\n)\r\n\r\nexport default Filtering","import React from 'react'\r\n\r\nconst Number = ({ person, handler }) => (\r\n    <tr>\r\n        <td>{person.name}</td><td>{person.number}</td>\r\n        <td><button onClick={handler}>poista</button></td>\r\n    </tr>\r\n)\r\n\r\nexport default Number","import React from 'react'\r\nimport Number from './Number'\r\n\r\nconst Numbers = ({ nimet, handleDelete }) => {\r\n\r\n    const numberRows = () => nimet.map(persoona =>\r\n        <Number\r\n            person={persoona}\r\n            key={nimet.indexOf(persoona)}\r\n            handler={() => handleDelete(persoona.id)}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {numberRows()}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Numbers","import React from 'react'\r\n\r\nconst Notification = ({ message, messageType }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={messageType}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newNumber) => {\r\n    const request = axios.post(baseUrl, newNumber)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst replace = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAllNumbers: getAll,\r\n    createNumber: create,\r\n    removeNumber: remove,\r\n    replaceNumber: replace\r\n}","import React, { useState, useEffect } from 'react'\nimport PersonInputForm from './components/PersonInputForm'\nimport Filtering from './components/Filtering'\nimport Numbers from './components/Numbers'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './App.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterValue, setFilterState] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState({ text: null, type: 'info' })\n\n  // JSON-server tulee olla käynnissä, portti 3001. 'npm run server'\n  useEffect(() => {\n    personService\n      .getAllNumbers()\n      .then(initialNumbers => {\n        setPersons(initialNumbers)\n      })\n  }, [])\n\n  const namesToShow = filterValue.length !== 0 ? persons.filter(persoona =>\n    persoona.name.toLowerCase().includes(filterValue.toLowerCase()) | persoona.number.includes(filterValue))\n    : persons\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    const uusiNimi = newName.trim()\n    if (uusiNimi.length === 0 && newNumber.trim().length === 0) {\n      window.alert('Nimi ja puhelinnumero ovat pakollisia kenttiä.')\n      return\n    }\n\n    if (uusiNimi.length === 0) {\n      window.alert('Nimi on pakollinen.')\n      return\n    }\n\n    if (newNumber.trim().length === 0) {\n      window.alert('Puhelinnumero on pakollinen.')\n      return\n    }\n\n    if (newNumber && persons.find(persoona => persoona.name.toLowerCase() === uusiNimi.toLowerCase())) {\n      if (window.confirm(`${uusiNimi} on jo luettelossa. Korvataanko vanha numero uudella?`)) {\n        const persoona = persons.find(persoona => persoona.name.toLowerCase() === uusiNimi.toLowerCase())\n        const korvattavaPersoona = { ...persoona, number: newNumber }\n        personService\n          .replaceNumber(korvattavaPersoona.id, korvattavaPersoona)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== korvattavaPersoona.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .then(() => {\n            setNotificationMessage({\n              text: `Käyttäjän ${korvattavaPersoona.name} numeroksi päivitettiin ${korvattavaPersoona.number}.`,\n              type: 'info'\n            })\n          })\n          .then(setTimeout(() => {\n            setNotificationMessage({ ...notificationMessage, text: null })\n          }, 5000))\n          .catch(error => {\n            setNotificationMessage({\n              text: `Käyttäjän ${korvattavaPersoona.name} numeron muuttamisessa oli ongelma: ${error}.`,\n              type: 'error'\n            })\n            setTimeout(() => {\n              setNotificationMessage({ ...notificationMessage, text: null })\n            }, 7000)\n          })\n        return\n      }\n      return\n    }\n\n    const newPersonEntry = {\n      name: uusiNimi,\n      number: newNumber\n    }\n\n    personService\n      .createNumber(newPersonEntry)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n      .then(() => {\n        setNotificationMessage({\n          text: `Lisättiin ${newPersonEntry.name} numerolla ${newPersonEntry.number}.`,\n          type: 'info'\n        })\n      })\n      .then(setTimeout(() => {\n        setNotificationMessage({ ...notificationMessage, text: null })\n      }, 5000))\n      .catch(error => {\n        setNotificationMessage({\n          text: `Käyttäjän ${newPersonEntry.name} lisäämisessä oli ongelma: ${error}.`,\n          type: 'error'\n        })\n        setTimeout(() => {\n          setNotificationMessage({ ...notificationMessage, text: null })\n        }, 7000)\n      })\n  }\n\n  const removeNumber = (id) => {\n    const toBeRemoved = persons.find(persoona => persoona.id === id).name\n    if (window.confirm(`Poistetaanko ${toBeRemoved} puhelinluettelosta?`)) {\n      personService.removeNumber(id)\n        .then(setPersons(persons.filter(person => person.id !== id)))\n        .then(() => {\n          setNotificationMessage({\n            text: `Poistettiin ${toBeRemoved}.`,\n            type: 'info'\n          })\n        })\n        .then(setTimeout(() => {\n          setNotificationMessage({ ...notificationMessage, text: null })\n        }, 5000))\n        .catch(error => {\n          setNotificationMessage({\n            text: `Käyttäjä ${toBeRemoved} oli jo poistettu.`,\n            type: 'error'\n          })\n          setTimeout(() => {\n            setNotificationMessage({ ...notificationMessage, text: null })\n          }, 7000)\n        })\n    }\n  }\n\n  const handlePersonDeletion = (id) => removeNumber(id)\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterField = (event) => setFilterState(event.target.value)\n\n  return (\n    <div className='base'>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={notificationMessage.text} messageType={notificationMessage.type} />\n      <Filtering filterChange={handleFilterField} />\n      <h3>Lisää uusi</h3>\n      <PersonInputForm\n        submitCommand={addNumber}\n        nameChange={handleNameChange} nameValue={newName}\n        numberChange={handleNumberChange} numberValue={newNumber}\n      />\n      <h3>Numerot</h3>\n      <Numbers nimet={namesToShow} handleDelete={handlePersonDeletion} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}